define(["Libras","../../../widgets/Navigation/Core/loadView","../../../widgets/Navigation/ViewModels/ResetViewNavigationControl","../../../widgets/Navigation/ViewModels/ZoomNavigationControl","../../../widgets/Navigation/SvgPaths/svgCompassOuterRing","../../../widgets/Navigation/SvgPaths/svgCompassGyro","../../../widgets/Navigation/SvgPaths/svgCompassRotationMarker","../../../widgets/Navigation/Core/Utils"],function(t,o,e,a,i,s,r,n){"use strict";var c=t.defined,d=t.Math,l=t.getTimestamp,v=t.EventHelper,u=t.Transforms,m=t.SceneMode,b=t.Cartesian2,g=t.Cartesian3,h=t.Matrix4,p=t.BoundingSphere,C=t.HeadingPitchRange,k=t.knockout,f=function(t){this.terria=t.terria,this.eventHelper=new v,this.enableZoomControls=!c(t.enableZoomControls)||t.enableZoomControls,this.enableCompass=!c(t.enableCompass)||t.enableCompass,this.controls=t.controls,c(this.controls)||(this.controls=[new a(this.terria,!0),new e(this.terria),new a(this.terria,!1)]),this.svgCompassOuterRing=i,this.svgCompassGyro=s,this.svgCompassRotationMarker=r,this.showCompass=c(this.terria)&&this.enableCompass,this.heading=this.showCompass?this.terria.scene.camera.heading:0,this.isOrbiting=!1,this.orbitCursorAngle=0,this.orbitCursorOpacity=0,this.orbitLastTimestamp=0,this.orbitFrame=void 0,this.orbitIsLook=!1,this.orbitMouseMoveFunction=void 0,this.orbitMouseUpFunction=void 0,this.isRotating=!1,this.rotateInitialCursorAngle=void 0,this.rotateFrame=void 0,this.rotateIsLook=!1,this.rotateMouseMoveFunction=void 0,this.rotateMouseUpFunction=void 0,this._unsubcribeFromPostRender=void 0,k.track(this,["controls","showCompass","heading","isOrbiting","orbitCursorAngle","isRotating"]);var o=this;function n(){c(o.terria)?(o._unsubcribeFromPostRender&&(o._unsubcribeFromPostRender(),o._unsubcribeFromPostRender=void 0),o.showCompass=o.enableCompass,o._unsubcribeFromPostRender=o.terria.scene.postRender.addEventListener(function(){o.heading=o.terria.scene.camera.heading})):(o._unsubcribeFromPostRender&&(o._unsubcribeFromPostRender(),o._unsubcribeFromPostRender=void 0),o.showCompass=!1)}this.eventHelper.add(this.terria.afterWidgetChanged,n,this),n()};f.prototype.destroy=function(){this.eventHelper.removeAll()},f.prototype.show=function(t){var e;this.enableZoomControls&&this.enableCompass?e='<div class="compass" title="拖动外圈：旋转视图；拖动陀螺仪：自由轨道；双击：重置视图；" data-bind="visible: showCompass, event: { mousedown: handleMouseDown, click: handleDoubleClick }"> <div class="compass-outer-ring" title="通过拖拽旋转视图" data-bind="style: { transform: \'rotate(-\' + heading + \'rad)\', \'-webkit-transform\': \'rotate(-\' + heading + \'rad)\' }"><span class=\'libras-icon-compass\'></span></div> <div class="compass-gyro-background"></div> <div class="compass-gyro" data-bind="css: { \'compass-gyro-active\': isOrbiting }"></div></div><div class="navigation-controls">\x3c!-- ko foreach: controls --\x3e<div data-bind="click: activate, attr: { title: $data.name }, css: $root.isLastControl($data) ? \'navigation-control-last\' : \'navigation-control\' ">   \x3c!-- ko if: $data.hasText --\x3e   <div data-bind="text: $data.text, css: $data.isActive ?  \'navigation-control-icon-active \' + $data.cssClass : $data.cssClass"></div>   \x3c!-- /ko --\x3e  \x3c!-- ko ifnot: $data.hasText --\x3e  <div data-bind="css: $data.isActive ?  \'navigation-control-icon-active \' + $data.cssClass : $data.cssClass"><span class=\'libras-icon-home\'></span></div>  \x3c!-- /ko --\x3e </div> \x3c!-- /ko --\x3e</div>':!this.enableZoomControls&&this.enableCompass?e='<div class="compass" title="拖动外圈：旋转视图；拖动陀螺仪：自由轨道；双击：重置视图" data-bind="visible: showCompass, event: { mousedown: handleMouseDown, dblclick: handleDoubleClick }"><div class="compass-outer-ring-background"></div>'+" <div class=\"compass-rotation-marker\" data-bind=\"visible: isOrbiting, style: { transform: 'rotate(-' + orbitCursorAngle + 'rad)', '-webkit-transform': 'rotate(-' + orbitCursorAngle + 'rad)', opacity: orbitCursorOpacity }, librasSvgPath: { path: svgCompassRotationMarker, width: 145, height: 145 }\"></div> <div class=\"compass-outer-ring\" title=\"通过拖拽旋转视图\" data-bind=\"style: { transform: 'rotate(-' + heading + 'rad)', '-webkit-transform': 'rotate(-' + heading + 'rad)' }, librasSvgPath: { path: svgCompassOuterRing, width: 145, height: 145 }\"></div> <div class=\"compass-gyro-background\"></div></div><div class=\"navigation-controls\">\x3c!-- ko foreach: controls --\x3e<div data-bind=\"click: activate, attr: { title: $data.name }, css: $root.isLastControl($data) ? 'navigation-control-last' : 'navigation-control' \">   \x3c!-- ko if: $data.hasText --\x3e   <div data-bind=\"text: $data.text, css: $data.isActive ?  'navigation-control-icon-active ' + $data.cssClass : $data.cssClass\"></div>   \x3c!-- /ko --\x3e  \x3c!-- ko ifnot: $data.hasText --\x3e  <div data-bind=\"css: $data.isActive ?  'navigation-control-icon-active ' + $data.cssClass : $data.cssClass\">&#8634</div>  \x3c!-- /ko --\x3e </div> \x3c!-- /ko --\x3e</div>":this.enableZoomControls&&!this.enableCompass?e='<div class="compass"  style="display: none;" title="Drag outer ring: rotate view. Drag inner gyroscope: free orbit.Double-click: reset view.TIP: You can also free orbit by holding the CTRL key and dragging the map." data-bind="visible: showCompass, event: { mousedown: handleMouseDown, dblclick: handleDoubleClick }"><div class="compass-outer-ring-background"></div>'+" <div class=\"compass-rotation-marker\" data-bind=\"visible: isOrbiting, style: { transform: 'rotate(-' + orbitCursorAngle + 'rad)', '-webkit-transform': 'rotate(-' + orbitCursorAngle + 'rad)', opacity: orbitCursorOpacity }, librasSvgPath: { path: svgCompassRotationMarker, width: 145, height: 145 }\"></div> <div class=\"compass-outer-ring\" title=\"Click and drag to rotate the camera\" data-bind=\"style: { transform: 'rotate(-' + heading + 'rad)', '-webkit-transform': 'rotate(-' + heading + 'rad)' }, librasSvgPath: { path: svgCompassOuterRing, width: 145, height: 145 }\"></div> <div class=\"compass-gyro-background\"></div> <div class=\"compass-gyro\" data-bind=\"librasSvgPath: { path: svgCompassGyro, width: 145, height: 145 }, css: { 'compass-gyro-active': isOrbiting }\"></div></div><div class=\"navigation-controls\"    >\x3c!-- ko foreach: controls --\x3e<div data-bind=\"click: activate, attr: { title: $data.name }, css: $root.isLastControl($data) ? 'navigation-control-last' : 'navigation-control' \">   \x3c!-- ko if: $data.hasText --\x3e   <div data-bind=\"text: $data.text, css: $data.isActive ?  'navigation-control-icon-active ' + $data.cssClass : $data.cssClass\"></div>   \x3c!-- /ko --\x3e  \x3c!-- ko ifnot: $data.hasText --\x3e  <div data-bind=\"css: $data.isActive ?  'navigation-control-icon-active ' + $data.cssClass : $data.cssClass\">&#8634</div>  \x3c!-- /ko --\x3e </div> \x3c!-- /ko --\x3e</div>":this.enableZoomControls||this.enableCompass||(e='<div class="compass"  style="display: none;" title="Drag outer ring: rotate view. Drag inner gyroscope: free orbit.Double-click: reset view.TIP: You can also free orbit by holding the CTRL key and dragging the map." data-bind="visible: showCompass, event: { mousedown: handleMouseDown, dblclick: handleDoubleClick }"><div class="compass-outer-ring-background"></div> <div class="compass-rotation-marker" data-bind="visible: isOrbiting, style: { transform: \'rotate(-\' + orbitCursorAngle + \'rad)\', \'-webkit-transform\': \'rotate(-\' + orbitCursorAngle + \'rad)\', opacity: orbitCursorOpacity }, librasSvgPath: { path: svgCompassRotationMarker, width: 145, height: 145 }"></div> <div class="compass-outer-ring" title="Click and drag to rotate the camera" data-bind="style: { transform: \'rotate(-\' + heading + \'rad)\', \'-webkit-transform\': \'rotate(-\' + heading + \'rad)\' }, librasSvgPath: { path: svgCompassOuterRing, width: 145, height: 145 }"></div> <div class="compass-gyro-background"></div> <div class="compass-gyro" data-bind="librasSvgPath: { path: svgCompassGyro, width: 145, height: 145 }, css: { \'compass-gyro-active\': isOrbiting }"></div></div><div class="navigation-controls"   style="display: none;" >\x3c!-- ko foreach: controls --\x3e<div data-bind="click: activate, attr: { title: $data.name }, css: $root.isLastControl($data) ? \'navigation-control-last\' : \'navigation-control\' ">   \x3c!-- ko if: $data.hasText --\x3e   <div data-bind="text: $data.text, css: $data.isActive ?  \'navigation-control-icon-active \' + $data.cssClass : $data.cssClass"></div>   \x3c!-- /ko --\x3e  \x3c!-- ko ifnot: $data.hasText --\x3e  <div data-bind="css: $data.isActive ?  \'navigation-control-icon-active \' + $data.cssClass : $data.cssClass">&#8634</div>  \x3c!-- /ko --\x3e </div> \x3c!-- /ko --\x3e</div>'),o(e,t,this)},f.prototype.add=function(t){this.controls.push(t)},f.prototype.remove=function(t){this.controls.remove(t)},f.prototype.isLastControl=function(t){return t===this.controls[this.controls.length-1]};var w=new b;f.prototype.handleMouseDown=function(t,o){if(this.terria.scene.mode===m.MORPHING)return!0;var e=o.currentTarget,a=o.currentTarget.getBoundingClientRect(),i=a.width/2,s=new b((a.right-a.left)/2,(a.bottom-a.top)/2),r=new b(o.clientX-a.left,o.clientY-a.top),v=b.subtract(r,s,w),p=b.magnitude(v)/i;if(p<50/145)!function(t,o,e){var a=t.terria.scene,i=a.screenSpaceCameraController;if(a.mode==m.MORPHING||!i.enableInputs)return;switch(a.mode){case m.COLUMBUS_VIEW:if(i.enableLook)break;if(!i.enableTranslate||!i.enableTilt)return;break;case m.SCENE3D:if(i.enableLook)break;if(!i.enableTilt||!i.enableRotate)return;break;case m.SCENE2D:if(!i.enableTranslate)return}document.removeEventListener("mousemove",t.orbitMouseMoveFunction,!1),document.removeEventListener("mouseup",t.orbitMouseUpFunction,!1),c(t.orbitTickFunction)&&t.terria.clock.onTick.removeEventListener(t.orbitTickFunction);t.orbitMouseMoveFunction=void 0,t.orbitMouseUpFunction=void 0,t.orbitTickFunction=void 0,t.isOrbiting=!0,t.orbitLastTimestamp=l();var s=a.camera;if(c(t.terria.trackedEntity))t.orbitFrame=void 0,t.orbitIsLook=!1;else{var r=n.getCameraFocus(t.terria,!0,F);c(r)?(t.orbitFrame=u.eastNorthUpToFixedFrame(r,a.globe.ellipsoid,M),t.orbitIsLook=!1):(t.orbitFrame=u.eastNorthUpToFixedFrame(s.positionWC,a.globe.ellipsoid,M),t.orbitIsLook=!0)}function v(o,e){var a=Math.atan2(-o.y,o.x);t.orbitCursorAngle=d.zeroToTwoPi(a-d.PI_OVER_TWO);var i=b.magnitude(o),s=e/2,r=Math.min(i/s,1),n=.5*r*r+.5;t.orbitCursorOpacity=n}t.orbitTickFunction=function(o){var e,i=l(),r=i-t.orbitLastTimestamp,n=2.5*(t.orbitCursorOpacity-.5)/1e3,v=r*n,u=t.orbitCursorAngle+d.PI_OVER_TWO,b=Math.cos(u)*v,p=Math.sin(u)*v;c(t.orbitFrame)&&(e=h.clone(s.transform,x),s.lookAtTransform(t.orbitFrame)),a.mode==m.SCENE2D?s.move(new g(b,p,0),Math.max(a.canvas.clientWidth,a.canvas.clientHeight)/100*s.positionCartographic.height*v):t.orbitIsLook?(s.look(g.UNIT_Z,-b),s.look(s.right,-p)):(s.rotateLeft(b),s.rotateUp(p)),c(t.orbitFrame)&&s.lookAtTransform(e),t.orbitLastTimestamp=i},t.orbitMouseMoveFunction=function(t){var e=o.getBoundingClientRect(),a=new b((e.right-e.left)/2,(e.bottom-e.top)/2),i=new b(t.clientX-e.left,t.clientY-e.top),s=b.subtract(i,a,w);v(s,e.width)},t.orbitMouseUpFunction=function(o){t.isOrbiting=!1,document.removeEventListener("mousemove",t.orbitMouseMoveFunction,!1),document.removeEventListener("mouseup",t.orbitMouseUpFunction,!1),c(t.orbitTickFunction)&&t.terria.clock.onTick.removeEventListener(t.orbitTickFunction),t.orbitMouseMoveFunction=void 0,t.orbitMouseUpFunction=void 0,t.orbitTickFunction=void 0},document.addEventListener("mousemove",t.orbitMouseMoveFunction,!1),document.addEventListener("mouseup",t.orbitMouseUpFunction,!1),t.terria.clock.onTick.addEventListener(t.orbitTickFunction),v(e,o.getBoundingClientRect().width)}(this,e,v);else{if(!(p<1))return!0;!function(t,o,e){if(t.terria.options.enableCompassOuterRing=!c(t.terria.options.enableCompassOuterRing)||t.terria.options.enableCompassOuterRing,t.terria.options.enableCompassOuterRing){var a,i=t.terria.scene,s=i.camera,r=i.screenSpaceCameraController;if(i.mode==m.MORPHING||i.mode==m.SCENE2D||!r.enableInputs)return;if(!r.enableLook&&(i.mode==m.COLUMBUS_VIEW||i.mode==m.SCENE3D&&!r.enableRotate))return;if(document.removeEventListener("mousemove",t.rotateMouseMoveFunction,!1),document.removeEventListener("mouseup",t.rotateMouseUpFunction,!1),t.rotateMouseMoveFunction=void 0,t.rotateMouseUpFunction=void 0,t.isRotating=!0,t.rotateInitialCursorAngle=Math.atan2(-e.y,e.x),c(t.terria.trackedEntity))t.rotateFrame=void 0,t.rotateIsLook=!1;else{var l=n.getCameraFocus(t.terria,!0,F);c(l)&&(i.mode!=m.COLUMBUS_VIEW||r.enableLook||r.enableTranslate)?(t.rotateFrame=u.eastNorthUpToFixedFrame(l,i.globe.ellipsoid,M),t.rotateIsLook=!1):(t.rotateFrame=u.eastNorthUpToFixedFrame(s.positionWC,i.globe.ellipsoid,M),t.rotateIsLook=!0)}c(t.rotateFrame)&&(a=h.clone(s.transform,x),s.lookAtTransform(t.rotateFrame)),t.rotateInitialCameraAngle=-s.heading,c(t.rotateFrame)&&s.lookAtTransform(a),t.rotateMouseMoveFunction=function(e){var a,i=o.getBoundingClientRect(),s=new b((i.right-i.left)/2,(i.bottom-i.top)/2),r=new b(e.clientX-i.left,e.clientY-i.top),n=b.subtract(r,s,w),l=Math.atan2(-n.y,n.x),v=l-t.rotateInitialCursorAngle,u=d.zeroToTwoPi(t.rotateInitialCameraAngle-v),m=t.terria.scene.camera;c(t.rotateFrame)&&(a=h.clone(m.transform,x),m.lookAtTransform(t.rotateFrame));var g=-m.heading;m.rotateRight(u-g),c(t.rotateFrame)&&m.lookAtTransform(a)},t.rotateMouseUpFunction=function(o){t.isRotating=!1,document.removeEventListener("mousemove",t.rotateMouseMoveFunction,!1),document.removeEventListener("mouseup",t.rotateMouseUpFunction,!1),t.rotateMouseMoveFunction=void 0,t.rotateMouseUpFunction=void 0},document.addEventListener("mousemove",t.rotateMouseMoveFunction,!1),document.addEventListener("mouseup",t.rotateMouseUpFunction,!1)}}(this,e,v)}};var x=new h,M=new h,F=new g;return f.prototype.handleDoubleClick=function(t,o){var e=t.terria.scene,a=e.camera,i=e.screenSpaceCameraController;if(e.mode==m.MORPHING||!i.enableInputs)return!0;if(e.mode!=m.COLUMBUS_VIEW||i.enableTranslate){if(e.mode==m.SCENE3D||e.mode==m.COLUMBUS_VIEW){if(!i.enableLook)return;if(e.mode==m.SCENE3D&&!i.enableRotate)return}var s=n.getCameraFocus(t.terria,!0,F);if(c(s)){var r=e.globe.ellipsoid.cartographicToCartesian(a.positionCartographic,new g),l=e.globe.ellipsoid.geodeticSurfaceNormal(s),v=new p(s,0);a.flyToBoundingSphere(v,{offset:new C(0,d.PI_OVER_TWO-g.angleBetween(l,a.directionWC),g.distance(r,s)),duration:1.5})}else this.controls[1].resetView()}},f.create=function(t){var o=new f(t);return o.show(t.container),o},f});