define(["Libras"],function(e){var i=e.Color,n=e.Cartesian3,t=(e.Cartographic,e.Rectangle,e.PolygonHierarchy),r=e.PolygonGeometry,o=e.GeometryInstance,l=(e.RectangleGeometry,e.ColorGeometryInstanceAttribute),a=e.GroundPrimitive,s=e.ClassificationType,c=e.PolylineDashMaterialProperty;return drawMap={cartographics:[],addPoint:function(e){this.viewer=e;var t=this;this.pointHandler=new EventDrive({viewer:t.viewer,callBack:function(e){t.removEntities(["point"]),t.viewer.entities.add({id:"point",position:n.fromDegreesArray(e)[0],point:{pixelSize:10,color:i.YELLOW}})}})},destroyPointHandler:function(e){this.pointHandler.destroy(),this.removEntities(["point"])},addPolyLine:function(e){this.viewer=e;var t=this,r=[];this.polyLineClickHandler=new EventDrive({viewer:e,callBack:function(e){r.push(e[0]),r.push(e[1]),r.length>1&&(t.removEntities(["strockLine"]),t.viewer.entities.add({id:"strockLine",polyline:{positions:n.fromDegreesArray(r),width:1,material:i.RED}}))},eventType:"LEFT_CLICK"}),this.polyLineMoveHandler=new EventDrive({viewer:e,callBack:function(e){var o=r.length;r.length>1&&(t.removEntities(["dashLine"]),t.viewer.entities.add({id:"dashLine",polyline:{positions:n.fromDegreesArray([r[o-2],r[o-1],e[0],e[1]]),width:1,material:new c({color:i.WHITE})}}))},eventType:"MOUSE_MOVE"})},destroyPolyLineHandler:function(){this.polyLineClickHandler.destroy(),this.polyLineMoveHandler.destroy(),this.removEntities(["dashLine","strockLine"])},addPolygon:function(e){this.viewer=e;var t=this,r=[];this.polygonClickHandler=new EventDrive({viewer:e,callBack:function(e){r.push(e[0]),r.push(e[1]),t.removEntities(["polygon1"]),r.length>=3&&t.viewer.entities.add({id:"polygon1",polygon:{hierarchy:n.fromDegreesArray(r),material:i.RED.withAlpha(.5)}})}}),this.polygonMoveHandler=new EventDrive({viewer:e,callBack:function(e){var o;t.removEntities(["polygon2"]),o=r.length?(r.join()+","+e.join()).split(",").map(function(e){return Number(e)}):e,2==r.length?(t.removEntities(["polygon2"]),t.viewer.entities.add({id:"polygon2",polyline:{positions:n.fromDegreesArray(o),width:1,material:new c({color:i.WHITE})}})):r.length>2&&t.viewer.entities.add({id:"polygon2",polygon:{hierarchy:n.fromDegreesArray(o),material:i.WHITE.withAlpha(.5)}})},eventType:"MOUSE_MOVE"})},destroyPolygonHandler:function(){this.polygonClickHandler.destroy(),this.polygonMoveHandler.destroy(),this.removEntities(["polygon1","polygon2"])},removEntities:function(e){var i=this;e.forEach(function(e,n,t){i.viewer.entities.getById(e)&&i.viewer.entities.removeById(e)})},ElePoint:function(e){var c=this,v=[];this.viewer=e,this.eleClickHandler=new EventDrive({viewer:e,callBack:function(e,d,y){console.log(e),console.log(y),v.push(e[0],e[1]),console.log(v),v.length>=6&&(c.rectanglePrimitive&&c.viewer.scene.primitives.remove(c.rectanglePrimitive),c.rectanglePrimitive=c.viewer.scene.primitives.add(new a({geometryInstances:new o({geometry:new r({polygonHierarchy:new t(n.fromDegreesArray(v))}),attributes:{color:l.fromColor(new i(1,0,0,.5))}}),classificationType:s.LIBRAS_3D_TILE})))}})},removeElePoint:function(e){this.eleClickHandle&&this.eleClickHandler.destroy(),this.rectanglePrimitive&&e.scene.primitives.remove(this.rectanglePrimitive)}},drawMap});